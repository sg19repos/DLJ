{"version":3,"sources":["../node_modules/@material-ui/icons/FavoriteBorderRounded.js","../node_modules/@material-ui/core/esm/GridList/GridList.js","../node_modules/@material-ui/core/esm/GridListTile/GridListTile.js","../node_modules/@material-ui/core/esm/utils/debounce.js","../node_modules/@material-ui/core/esm/GridListTileBar/GridListTileBar.js","components/categoryPages/gridListImages.js","components/categoryPages/loadImages.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","forwardRef","props","ref","_props$cellHeight","cellHeight","children","classes","className","_props$cols","cols","_props$component","component","Component","_props$spacing","spacing","style","other","root","margin","Children","map","child","isValidElement","childCols","childRows","rows","cloneElement","width","concat","height","padding","withStyles","display","flexWrap","overflowY","listStyle","WebkitOverflowScrolling","name","imgEl","_imgEl$classList","_imgEl$classList2","_imgEl$classList3","_imgEl$classList4","complete","parentElement","offsetWidth","offsetHeight","classList","remove","apply","imgFullWidth","split","add","imgFullHeight","imgRef","useRef","useEffect","addEventListener","ensureImageCover","current","handleResize","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","that","this","clearTimeout","setTimeout","clear","debounce","window","removeEventListener","tile","type","isMuiElement","boxSizing","flexShrink","position","overflow","transform","left","top","actionIcon","_props$actionPosition","actionPosition","subtitle","title","_props$titlePosition","titlePosition","actionPos","titlePositionTop","titlePositionBottom","rootSubtitle","titleWrap","titleWrapActionPosLeft","right","titleWrapActionPosRight","actionIconActionPosLeft","theme","background","alignItems","fontFamily","typography","bottom","flexGrow","marginLeft","marginRight","color","palette","common","white","fontSize","pxToRem","lineHeight","textOverflow","whiteSpace","order","history","createBrowserHistory","useStyles","makeStyles","justifyContent","backgroundColor","paper","gridList","marginBottom","icon","favIcon","catImage","TitlebarGridList","gallerySelection","tileData","tileDataRings","tileDataEarRings","key","img","to","pathname","search","modelNo","category","id","onClick","push","src","alt","handleFavClick","LoadImages"],"mappings":"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","file":"static/js/3.afa9f9a2.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19.66 3.99c-2.64-1.8-5.9-.96-7.66 1.1-1.76-2.06-5.02-2.91-7.66-1.1-1.4.96-2.28 2.58-2.34 4.29-.14 3.88 3.3 6.99 8.55 11.76l.1.09c.76.69 1.93.69 2.69-.01l.11-.1c5.25-4.76 8.68-7.87 8.55-11.75-.06-1.7-.94-3.32-2.34-4.28zM12.1 18.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorderRounded');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowY: 'auto',\n    listStyle: 'none',\n    padding: 0,\n    WebkitOverflowScrolling: 'touch' // Add iOS momentum scrolling.\n\n  }\n};\nvar GridList = React.forwardRef(function GridList(props, ref) {\n  var _props$cellHeight = props.cellHeight,\n      cellHeight = _props$cellHeight === void 0 ? 180 : _props$cellHeight,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 2 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'ul' : _props$component,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 4 : _props$spacing,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"cellHeight\", \"children\", \"classes\", \"className\", \"cols\", \"component\", \"spacing\", \"style\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    style: _extends({\n      margin: -spacing / 2\n    }, style)\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the GridList component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childCols = child.props.cols || 1;\n    var childRows = child.props.rows || 1;\n    return React.cloneElement(child, {\n      style: _extends({\n        width: \"\".concat(100 / cols * childCols, \"%\"),\n        height: cellHeight === 'auto' ? 'auto' : cellHeight * childRows + spacing,\n        padding: spacing / 2\n      }, child.props.style)\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridList.propTypes = {\n  /**\n   * Number of px for one cell height.\n   * You can set `'auto'` if you want to let the children determine the height.\n   */\n  cellHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n\n  /**\n   * Grid Tiles that will be in Grid List.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Number of px for the spacing between tiles.\n   */\n  spacing: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridList'\n})(GridList);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport debounce from '../utils/debounce';\nimport withStyles from '../styles/withStyles';\nimport isMuiElement from '../utils/isMuiElement';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    boxSizing: 'border-box',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the `div` element that wraps the children. */\n  tile: {\n    position: 'relative',\n    display: 'block',\n    // In case it's not rendered with a div.\n    height: '100%',\n    overflow: 'hidden'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullHeight: {\n    height: '100%',\n    transform: 'translateX(-50%)',\n    position: 'relative',\n    left: '50%'\n  },\n\n  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */\n  imgFullWidth: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateY(-50%)',\n    top: '50%'\n  }\n};\n\nvar fit = function fit(imgEl, classes) {\n  if (!imgEl || !imgEl.complete) {\n    return;\n  }\n\n  if (imgEl.width / imgEl.height > imgEl.parentElement.offsetWidth / imgEl.parentElement.offsetHeight) {\n    var _imgEl$classList, _imgEl$classList2;\n\n    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, _toConsumableArray(classes.imgFullWidth.split(' ')));\n\n    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, _toConsumableArray(classes.imgFullHeight.split(' ')));\n  } else {\n    var _imgEl$classList3, _imgEl$classList4;\n\n    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, _toConsumableArray(classes.imgFullHeight.split(' ')));\n\n    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, _toConsumableArray(classes.imgFullWidth.split(' ')));\n  }\n};\n\nfunction ensureImageCover(imgEl, classes) {\n  if (!imgEl) {\n    return;\n  }\n\n  if (imgEl.complete) {\n    fit(imgEl, classes);\n  } else {\n    imgEl.addEventListener('load', function () {\n      fit(imgEl, classes);\n    });\n  }\n}\n\nvar GridListTile = React.forwardRef(function GridListTile(props, ref) {\n  // cols rows default values are for docs only\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$cols = props.cols,\n      cols = _props$cols === void 0 ? 1 : _props$cols,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 1 : _props$rows,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"cols\", \"component\", \"rows\"]);\n\n  var imgRef = React.useRef(null);\n  React.useEffect(function () {\n    ensureImageCover(imgRef.current, classes);\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      fit(imgRef.current, classes);\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [classes]);\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: classes.tile\n  }, React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (child.type === 'img' || isMuiElement(child, ['Image'])) {\n      return React.cloneElement(child, {\n        ref: imgRef\n      });\n    }\n\n    return child;\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTile.propTypes = {\n  /**\n   * Theoretically you can pass any node as children, but the main use case is to pass an img,\n   * in which case GridListTile takes care of making the image \"cover\" available space\n   * (similar to `background-size: cover` or to `object-fit: cover`).\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Width of the tile in number of grid cells.\n   */\n  cols: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the tile in number of grid cells.\n   */\n  rows: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTile'\n})(GridListTile);","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    } // eslint-disable-next-line consistent-this\n\n\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      height: 48,\n      background: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      alignItems: 'center',\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Styles applied to the root element if `titlePosition=\"bottom\"`. */\n    titlePositionBottom: {\n      bottom: 0\n    },\n\n    /* Styles applied to the root element if `titlePosition=\"top\"`. */\n    titlePositionTop: {\n      top: 0\n    },\n\n    /* Styles applied to the root element if a `subtitle` is provided. */\n    rootSubtitle: {\n      height: 68\n    },\n\n    /* Styles applied to the title and subtitle container element. */\n    titleWrap: {\n      flexGrow: 1,\n      marginLeft: 16,\n      marginRight: 16,\n      color: theme.palette.common.white,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the container element if `actionPosition=\"left\"`. */\n    titleWrapActionPosLeft: {\n      marginLeft: 0\n    },\n\n    /* Styles applied to the container element if `actionPosition=\"right\"`. */\n    titleWrapActionPosRight: {\n      marginRight: 0\n    },\n\n    /* Styles applied to the title container element. */\n    title: {\n      fontSize: theme.typography.pxToRem(16),\n      lineHeight: '24px',\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the subtitle container element. */\n    subtitle: {\n      fontSize: theme.typography.pxToRem(12),\n      lineHeight: 1,\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the actionIcon if supplied. */\n    actionIcon: {},\n\n    /* Styles applied to the actionIcon if `actionPosition=\"left\"`. */\n    actionIconActionPosLeft: {\n      order: -1\n    }\n  };\n};\nvar GridListTileBar = React.forwardRef(function GridListTileBar(props, ref) {\n  var actionIcon = props.actionIcon,\n      _props$actionPosition = props.actionPosition,\n      actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition,\n      classes = props.classes,\n      className = props.className,\n      subtitle = props.subtitle,\n      title = props.title,\n      _props$titlePosition = props.titlePosition,\n      titlePosition = _props$titlePosition === void 0 ? 'bottom' : _props$titlePosition,\n      other = _objectWithoutProperties(props, [\"actionIcon\", \"actionPosition\", \"classes\", \"className\", \"subtitle\", \"title\", \"titlePosition\"]);\n\n  var actionPos = actionIcon && actionPosition;\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, titlePosition === 'top' ? classes.titlePositionTop : classes.titlePositionBottom, subtitle && classes.rootSubtitle),\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.titleWrap, {\n      left: classes.titleWrapActionPosLeft,\n      right: classes.titleWrapActionPosRight\n    }[actionPos])\n  }, React.createElement(\"div\", {\n    className: classes.title\n  }, title), subtitle ? React.createElement(\"div\", {\n    className: classes.subtitle\n  }, subtitle) : null), actionIcon ? React.createElement(\"div\", {\n    className: clsx(classes.actionIcon, {\n      left: classes.actionIconActionPosLeft\n    }[actionPos])\n  }, actionIcon) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? GridListTileBar.propTypes = {\n  /**\n   * An IconButton element to be used as secondary action target\n   * (primary action target is the tile itself).\n   */\n  actionIcon: PropTypes.node,\n\n  /**\n   * Position of secondary action IconButton.\n   */\n  actionPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * String or element serving as subtitle (support text).\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Title to be displayed on tile.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Position of the title bar.\n   */\n  titlePosition: PropTypes.oneOf(['top', 'bottom'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiGridListTileBar'\n})(GridListTileBar);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport { tileDataEarRings, tileDataRings } from \"./tileData\";\r\nimport FavoriteBorderRoundedIcon from \"@material-ui/icons/FavoriteBorderRounded\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport handleFavClick from \"../../services/setFavorites\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    gridList: {\r\n        width: \"90%\",\r\n        height: \"auto\",\r\n        marginBottom: \"15% !important\"\r\n    },\r\n    icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\"\r\n    },\r\n    favIcon: {\r\n        position: \"absolute\",\r\n        top: \"2%\",\r\n        right: \"2%\",\r\n        color: \"#999\"\r\n    },\r\n    catImage: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function TitlebarGridList({ gallerySelection }) {\r\n    const classes = useStyles();\r\n    let tileData = [];\r\n    gallerySelection === \"rings\"\r\n        ? (tileData = tileDataRings)\r\n        : (tileData = tileDataEarRings);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <GridList cellHeight={180} className={classes.gridList}>\r\n                {tileData.map(tile => (\r\n                    <Link\r\n                        key={tile.img}\r\n                        to={{\r\n                            pathname: \"/itemDetails\",\r\n                            search: `?img=${tile.img}&modelNo=${tile.modelNo}&itemName=${tile.title}&itemCategory=${tile.category}`\r\n                        }}\r\n                        style={{\r\n                            padding: \"0px\",\r\n                            margin: \"1%\",\r\n                            width: \"48%\",\r\n                            backgroundColor: \"#f2f2f2\"\r\n                        }}\r\n                    >\r\n                        <GridListTile\r\n                            key={tile.img}\r\n                            id={tile.modelNo}\r\n                            style={{ height: \"-webkit-fill-available\" }}\r\n                            onClick={() =>\r\n                                history.push({\r\n                                    pathname: \"/itemDetails\",\r\n                                    search: `?img=${tile.img}`\r\n                                })\r\n                            }\r\n                        >\r\n                            <img\r\n                                className={classes.catImage}\r\n                                src={tile.img}\r\n                                alt={tile.title}\r\n                                width=\"30%\"\r\n                                height=\"70%\"\r\n                            />\r\n                            <FavoriteBorderRoundedIcon\r\n                                onClick={() => handleFavClick(tile.modelNo)}\r\n                                className={classes.favIcon}\r\n                            />\r\n\r\n                            <GridListTileBar\r\n                                style={{\r\n                                    height: \"20%\"\r\n                                }}\r\n                                title={tile.title}\r\n                            />\r\n                        </GridListTile>\r\n                    </Link>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TitlebarGridList from \"./gridListImages\";\r\n\r\nconst LoadImages = ({ gallerySelection }) => {\r\n    return (\r\n        <div>\r\n            <TitlebarGridList gallerySelection={gallerySelection} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadImages;\r\n"],"sourceRoot":""}